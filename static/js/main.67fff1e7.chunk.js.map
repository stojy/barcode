{"version":3,"sources":["barcode.png","components/Droppy.tsx","components/BarcodeQuagga.ts","components/Barcode.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Droppy","title","values","onSelect","DropdownButton","variant","className","id","map","value","Dropdown","Item","key","eventKey","e","BarcodeQuagga","_onDetected","width","height","onInitialised","onDetected","this","config","numOfWorkers","navigator","hardwareConcurrency","locate","inputStream","name","type","target","constraints","facingMode","area","top","right","left","bottom","decoder","readers","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","locator","halfSample","patchSize","showCanvas","showPatches","showFoundPatches","showSkeleton","showLabels","showPatchLabels","showRemainingPatchLabels","boxFromPatches","showTransformed","showTransformedBox","showBB","Quagga","init","err","error","code","message","stack","canvas","dom","overlay","style","display","handleDetected","bind","start","offDetected","stop","data","codeResult","capabilities","track","CameraAccess","getActiveTrack","getCapabilities","enable","applyConstraints","advanced","torch","window","screen","Barcode","resolutions","barcodeQuagga","getCameraResolution","defaultWidth","defaultHeight","useState","active","setActive","setWidth","setHeight","setCode","setError","setCapabilities","showCameraInfo","setShowCameraInfo","torchEnabled","setTorchEnabled","console","log","beep","handleInitialised","handleError","snd","Audio","volume","play","Object","prototype","toString","call","handleTorchChanged","a","setTorch","visibility","Button","onClick","retrievedCapabilities","FormControlLabel","control","Checkbox","color","checked","onChange","label","hidden","expandLevel","showNonenumerable","sortObjectKeys","theme","as","ButtonGroup","x","val","match","undefined","Number","disabled","App","src","logo","alt","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.67fff1e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/barcode.111a5967.png\";","import React from 'react';\r\nimport DropdownButton from 'react-bootstrap/esm/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/esm/Dropdown';\r\n\r\ndeclare type SelectCallback = (value: string | null) => void;\r\n\r\ninterface IDroppyProps {\r\n  title: string,\r\n  values: string[],\r\n  onSelect: SelectCallback\r\n}\r\n\r\nexport function Droppy({ title, values, onSelect }: IDroppyProps) {\r\n  return (\r\n    <DropdownButton variant='secondary' className='mr-2'id=\"dropdown-basic-button\" title={title}>\r\n      {\r\n        values.map(value => <Dropdown.Item key={`${value}`} eventKey={`${value}`} onSelect={(e) => onSelect(e)}>{value}</Dropdown.Item>)\r\n      }\r\n    </DropdownButton>\r\n  );\r\n}\r\n","/* istanbul ignore file */\r\nimport Quagga, { QuaggaJSResultObject } from 'quagga'\r\n\r\ntype OnDetectedCallback = (code: string) => void\r\ntype OnInitialisedCallback = (error: ErrorDetails | null) => void\r\n\r\n// unfortunately torch capability isn't natively part of MediaTrackCapabilities as it appears to be a browser specific feature\r\nexport interface CameraCapabilities extends MediaTrackCapabilities {\r\n  torch: boolean\r\n}\r\n\r\n// unfortunately quagga's error type is unspecified so a 'common' error type is defined here instead\r\nexport interface ErrorDetails extends Error {\r\n  code: number\r\n}\r\n\r\nexport interface BarcodeSetup {\r\n  width: number\r\n  height: number\r\n  onInitialised: OnInitialisedCallback\r\n  onDetected: OnDetectedCallback\r\n}\r\n\r\nexport class BarcodeQuagga {\r\n  _onDetected!: OnDetectedCallback\r\n\r\n  start({ width, height, onInitialised, onDetected }: BarcodeSetup): void {\r\n    this._onDetected = onDetected\r\n\r\n    const config = {\r\n      numOfWorkers: navigator.hardwareConcurrency,\r\n      locate: true,\r\n      inputStream: {\r\n        name: 'Live',\r\n        type: 'LiveStream',\r\n        target: '#captureTarget',\r\n        constraints: {\r\n          width,\r\n          height,\r\n          facingMode: 'environment',\r\n        },\r\n        area: {\r\n          top: '0%',\r\n          right: '0%',\r\n          left: '0%',\r\n          bottom: '0%',\r\n        },\r\n      },\r\n      decoder: {\r\n        readers: ['code_128_reader'],\r\n        debug: {\r\n          drawBoundingBox: false,\r\n          showFrequency: false,\r\n          drawScanline: false,\r\n          showPattern: false,\r\n        },\r\n        multiple: false,\r\n      },\r\n      locator: {\r\n        halfSample: true,\r\n        patchSize: 'large', // x-small, small, medium, large, x-large\r\n        debug: {\r\n          showCanvas: false,\r\n          showPatches: false,\r\n          showFoundPatches: false,\r\n          showSkeleton: false,\r\n          showLabels: false,\r\n          showPatchLabels: false,\r\n          showRemainingPatchLabels: false,\r\n          boxFromPatches: {\r\n            showTransformed: false,\r\n            showTransformedBox: false,\r\n            showBB: false,\r\n          },\r\n        },\r\n      },\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    Quagga.init(config, (err: any) => {\r\n      // unfortunately quagga doesn't define the error type so instead we reconstruct a 'common' error type here\r\n      let error: ErrorDetails | null = null;\r\n      if (err) {\r\n        error = {\r\n          code: 'code' in err ? err.code : 0,\r\n          message: 'message' in err ? err.message : '',\r\n          name: 'name' in err ? err.name : '',\r\n          stack: 'stack' in err ? err.stack : ''\r\n        }\r\n      }\r\n      else {\r\n        const drawingCanvas = Quagga.canvas.dom.overlay\r\n        drawingCanvas.style.display = 'none'\r\n\r\n        Quagga.onDetected(this.handleDetected.bind(this))\r\n        Quagga.start()\r\n      }\r\n\r\n      onInitialised(error)\r\n    })\r\n  }\r\n\r\n  stop(): void {\r\n    Quagga.offDetected(this.handleDetected)\r\n    Quagga.stop()\r\n  }\r\n\r\n  handleDetected(data: QuaggaJSResultObject): void {\r\n    this._onDetected(data.codeResult.code)\r\n  }\r\n\r\n  getCapabilities(): CameraCapabilities | null {\r\n    let capabilities: CameraCapabilities | null = null\r\n\r\n    var track = Quagga.CameraAccess.getActiveTrack() as MediaStreamTrack\r\n    if (typeof track.getCapabilities === 'function') {\r\n      capabilities = track.getCapabilities() as CameraCapabilities\r\n    }\r\n\r\n    return capabilities\r\n  }\r\n\r\n  async setTorch(enable: boolean): Promise<void> {\r\n    return Quagga.CameraAccess.getActiveTrack().applyConstraints({\r\n      advanced: [{ torch: enable } as MediaTrackConstraintSet],\r\n    })\r\n  }\r\n\r\n  getCameraResolution(): [number, number] {\r\n    // use low(er) resolution (e.g. 480px) instead of the camera's maximum allowed resolution to reduce processing overheads.. also not neeed to read a barcode\r\n    let width = 480\r\n    let height = 240\r\n\r\n    // camera screen/width is taken from a landscape perspective, so..\r\n    // - for a real device running mobi (i.e. in portrait) the values are reversed\r\n    // - for a simulated device running mobi (i.e. desktop development of mobi) OR desktop the values are left unchanged\r\n    if (window.screen.height > window.screen.width /*&& !!PRODUCTION*/) {\r\n      return [height, width]\r\n    }\r\n    return [width, height]\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Droppy } from './Droppy'\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport { BarcodeQuagga, ErrorDetails } from './BarcodeQuagga';\r\nimport Dropdown from 'react-bootstrap/esm/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/esm/ButtonGroup';\r\nimport 'react-bootstrap/esm';\r\n//import { getCapabilities, setTorch, getCameraResolution } from './camera';\r\nimport { ObjectInspector } from 'react-inspector';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { FormControlLabel } from '@material-ui/core';\r\n\r\ninterface IError extends Error {\r\n  type: any\r\n}\r\n\r\nexport function Barcode() {\r\n  const resolutions: number[] = [1, 100, 200, 250, 300, 480, 720, 721, 960, 1080, 1280, 1281, 1920, 1921];\r\n  const barcodeQuagga: BarcodeQuagga = new BarcodeQuagga();\r\n\r\n  const [defaultWidth, defaultHeight] = barcodeQuagga.getCameraResolution()\r\n\r\n  const [active, setActive] = useState(false);\r\n  const [width, setWidth] = useState(defaultWidth);\r\n  const [height, setHeight] = useState(defaultHeight);\r\n  const [code, setCode] = useState<string | null>(null);\r\n  const [error, setError] = useState<IError | null>(null);\r\n  const [capabilities, setCapabilities] = useState<MediaTrackCapabilities | null>(null);\r\n  const [showCameraInfo, setShowCameraInfo] = useState(false);\r\n  const [torchEnabled, setTorchEnabled] = useState(false);\r\n\r\n  const handleWidthSelected = (value: string | null): void => {\r\n    let val = value?.match(/\\d+/)?.[0];\r\n    if (val !== undefined)\r\n      setWidth(Number(val));\r\n  }\r\n\r\n  const handleHeightSelected = (value: string | null): void => {\r\n    let val = value?.match(/\\d+/)?.[0];\r\n    if (val !== undefined)\r\n      setHeight(Number(val));\r\n  }\r\n\r\n  const start = () => {\r\n    console.log(\"starting..\")\r\n    try {\r\n      barcodeQuagga.start({ width, height, onDetected: handleDetected, onInitialised: handleInitialised });\r\n    }\r\n    catch (err) {\r\n      handleError(err);\r\n    }\r\n    setActive(true)\r\n  }\r\n\r\n  const stop = () => {\r\n    console.log(\"stopping..\")\r\n    barcodeQuagga.stop();\r\n    setActive(false)\r\n  }\r\n\r\n  const handleDetected = (code: string) => {\r\n    console.log(`detected: code=${code}`)\r\n    setCode(code)\r\n    beep();\r\n  }\r\n\r\n  const handleInitialised = (error: ErrorDetails | null) => {\r\n    console.log(`initialised: error=${error}`)\r\n    if (error)\r\n      handleError(error)\r\n  }\r\n\r\n  const beep = () => {\r\n    var snd = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\r\n    snd.volume = 1;\r\n    snd.play();\r\n  }\r\n\r\n  const handleError = (err: Error) => {\r\n    console.error(err);\r\n\r\n    // redefining error as the original (MediaStreamError?) Error doesn't seem to have a working toJSON overload\r\n    // - also the underlying object type gets lost\r\n    let error: IError = {\r\n      message: err.message,\r\n      name: err.name,\r\n      stack: err.stack,\r\n      type: Object.prototype.toString.call(err) // https://stackoverflow.com/questions/332422/get-the-name-of-an-objects-type\r\n    }\r\n    setError(error);\r\n  }\r\n\r\n  const toggleCameraCapabilities = () => {\r\n    try {\r\n      if (!capabilities) {\r\n        let retrievedCapabilities = barcodeQuagga.getCapabilities();\r\n        setCapabilities(retrievedCapabilities)\r\n      }\r\n\r\n      setShowCameraInfo(!showCameraInfo);\r\n    }\r\n    catch (err) {\r\n      handleError(err)\r\n    }\r\n  }\r\n\r\n  const handleTorchChanged = async () => {\r\n    try {\r\n      await barcodeQuagga.setTorch(!torchEnabled);\r\n    }\r\n    catch (err) {\r\n      handleError(err);\r\n    }\r\n\r\n    setTorchEnabled(!torchEnabled);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div id='captureTarget' style={{ visibility: active ? 'visible' : 'collapse' }} />\r\n\r\n        <div>\r\n          {\r\n            active ?\r\n              <>\r\n                <Button className='ml-2' onClick={() => stop()}>Stop</Button>\r\n                <Button className='ml-2' variant='secondary' onClick={toggleCameraCapabilities}>Show/Hide Camera Info</Button>\r\n                <FormControlLabel className='ml-2'\r\n                  control={<Checkbox style={{ color: \"#00e676\" }} checked={torchEnabled} onChange={handleTorchChanged} />}\r\n                  label=\"Torch\"\r\n                />\r\n\r\n                <div className='mt-2 text-left' hidden={!showCameraInfo}>\r\n                  <ObjectInspector data={capabilities} expandLevel={10} showNonenumerable={false} sortObjectKeys={true} theme='chromeDark' />\r\n                </div>\r\n              </>\r\n              :\r\n              <>\r\n                <div>\r\n                  <Dropdown as={ButtonGroup}>\r\n                    <Droppy title={`Width: ${width}px`} values={resolutions.map(x => `${x}px`)} onSelect={handleWidthSelected} />\r\n                    <Droppy title={`Height: ${height}px`} values={resolutions.map(x => `${x}px`)} onSelect={handleHeightSelected} />\r\n                  </Dropdown>\r\n                </div>\r\n                <Button className='ml-2' onClick={() => start()}>Start (Quagga)</Button>\r\n                <Button className='ml-2' disabled>Start (Quagga2.. TBA)</Button>\r\n                <Button className='ml-2' disabled>Start (ZXing.. TBA)</Button>\r\n\r\n                <div>\r\n                  <label>standard: <input></input></label>\r\n                </div>\r\n                <div>\r\n                  <label>search: <input type=\"search\"></input></label>\r\n                </div>\r\n              </>\r\n          }\r\n          {\r\n            code ?\r\n              <>\r\n                <br />\r\n                <div>{`Code: ${code}`}</div>\r\n              </>\r\n              : null\r\n          }\r\n          <div className='mt-2 text-left' hidden={!error}>\r\n            <ObjectInspector data={error} expandLevel={10} showNonenumerable={false} sortObjectKeys={true} theme='chromeDark' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { Barcode } from './components/Barcode'\r\n\r\nimport logo from './barcode.png'\r\n\r\nexport function App() {\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"300px\" />\r\n          <br />\r\n          <br />\r\n\r\n          <Barcode />\r\n        </header>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App /> \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}