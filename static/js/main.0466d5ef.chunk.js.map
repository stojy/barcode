{"version":3,"sources":["barcode.png","components/Droppy.tsx","components/camera.ts","components/BarcodeQuagga.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Droppy","title","values","onSelect","DropdownButton","variant","className","id","map","value","Dropdown","Item","key","eventKey","e","_track","BarcodeQuagga","_onDetected","width","height","onDetected","this","self","config","numOfWorkers","navigator","hardwareConcurrency","locate","inputStream","name","type","target","constraints","facingMode","area","top","right","left","bottom","decoder","readers","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","locator","halfSample","patchSize","showCanvas","showPatches","showFoundPatches","showSkeleton","showLabels","showPatchLabels","showRemainingPatchLabels","boxFromPatches","showTransformed","showTransformedBox","showBB","console","log","JSON","stringify","Quagga","init","err","handleDetected","bind","start","offDetected","stop","data","codeResult","code","getCapabilities","callback","mediaDevices","getUserMedia","video","then","stream","document","querySelector","Error","srcObject","getVideoTracks","addEventListener","window","setTimeout","capabilities","pause","catch","error","App","props","initialState","active","showCameraInfo","torchEnabled","resolutions","barcodeQuagga","handleWidthSelected","val","match","undefined","setState","state","Number","handleHeightSelected","beep","getCameraCapabilities","src","logo","alt","style","visibility","hidden","Button","onClick","as","ButtonGroup","x","FormControlLabel","control","Checkbox","color","checked","onChange","handleTorchChanged","label","expandLevel","showNonenumerable","sortObjectKeys","theme","disabled","snd","Audio","volume","play","enabled","applyConstraints","advanced","torch","React","Component","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0466d5ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/barcode.111a5967.png\";","import React from 'react';\r\nimport DropdownButton from 'react-bootstrap/esm/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/esm/Dropdown';\r\n\r\ndeclare type SelectCallback = (value: string | null) => void;\r\n\r\ninterface IDroppyProps {\r\n  title: string,\r\n  values: string[],\r\n  onSelect: SelectCallback\r\n}\r\n\r\nexport function Droppy({ title, values, onSelect }: IDroppyProps) {\r\n  return (\r\n    <DropdownButton variant='secondary' className='mr-2'id=\"dropdown-basic-button\" title={title}>\r\n      {\r\n        values.map(value => <Dropdown.Item key={`${value}`} eventKey={`${value}`} onSelect={(e) => onSelect(e)}>{value}</Dropdown.Item>)\r\n      }\r\n    </DropdownButton>\r\n  );\r\n}\r\n","\r\nlet _track: MediaStreamTrack;\r\n\r\nexport function getCapabilities(callback: any) {\r\n  navigator.mediaDevices.getUserMedia({\r\n    video: {\r\n      facingMode: 'environment',\r\n    }\r\n  })\r\n    .then((stream) => {\r\n      const video = document.querySelector('video');\r\n      if (!video) {\r\n        throw new Error(\"can't find video tag\")\r\n      }\r\n\r\n      video.srcObject = stream;\r\n\r\n      // get the active track of the stream\r\n      _track = stream.getVideoTracks()[0];\r\n\r\n      video.addEventListener('loadedmetadata', (e) => {\r\n        window.setTimeout(() => (\r\n          onCapabilitiesReady(_track.getCapabilities())\r\n        ), 500);\r\n      });\r\n\r\n      function onCapabilitiesReady(capabilities: MediaTrackCapabilities) {\r\n        callback(capabilities);\r\n\r\n        if (!!video)\r\n          video.pause();\r\n      }\r\n    })\r\n    .catch(err => console.error('getUserMedia() failed: ', err));\r\n}\r\n\r\nexport function setTorch(enabled: boolean) {\r\n  _track.applyConstraints({\r\n    advanced: [{ torch: enabled } as any]\r\n  })\r\n    .catch(e => console.log(e));\r\n}\r\n\r\n","import Quagga from 'quagga'\r\n\r\ntype OnDetectedCallback = (code: string) => void;\r\n\r\nexport interface IBarcode {\r\n  width: number,\r\n  height: number,\r\n  onDetected: OnDetectedCallback,\r\n}\r\n\r\nexport class BarcodeQuagga {\r\n  _onDetected!: OnDetectedCallback;\r\n\r\n  start({width, height, onDetected}: IBarcode) {\r\n    this._onDetected = onDetected\r\n\r\n    const self = this\r\n\r\n    const config = {\r\n      numOfWorkers: navigator.hardwareConcurrency,\r\n      locate: true,\r\n      inputStream: {\r\n        name: \"Live\",\r\n        type: \"LiveStream\",\r\n        target: '#captureTarget',\r\n        constraints: {\r\n          width,\r\n          height,\r\n          facingMode: \"environment\"\r\n        },\r\n        area: {\r\n          top: \"0%\",\r\n          right: \"0%\",\r\n          left: \"0%\",\r\n          bottom: \"0%\"\r\n        },\r\n      },\r\n      decoder: {\r\n        readers: [\"code_128_reader\"],\r\n        debug: {\r\n          drawBoundingBox: false,\r\n          showFrequency: false,\r\n          drawScanline: false,\r\n          showPattern: false\r\n        },\r\n        multiple: false\r\n      },\r\n      locator: {\r\n        halfSample: true,\r\n        patchSize: \"large\", // x-small, small, medium, large, x-large\r\n        debug: {\r\n          showCanvas: false,\r\n          showPatches: false,\r\n          showFoundPatches: false,\r\n          showSkeleton: false,\r\n          showLabels: false,\r\n          showPatchLabels: false,\r\n          showRemainingPatchLabels: false,\r\n          boxFromPatches: {\r\n            showTransformed: false,\r\n            showTransformedBox: false,\r\n            showBB: false\r\n          }\r\n        }\r\n      }\r\n    };\r\n    console.log(`config: ${JSON.stringify(config)}`)\r\n\r\n    Quagga.init(config, function (err: any) {\r\n      if (err) {\r\n        console.log(err);\r\n        return\r\n      }\r\n\r\n      console.log(\"initialization finished\");\r\n      Quagga.onDetected(self.handleDetected.bind(self));\r\n      Quagga.start();\r\n    });\r\n  }\r\n\r\n  stop() {\r\n    Quagga.offDetected(this.handleDetected);\r\n    Quagga.stop()\r\n  }\r\n\r\n  handleDetected(data: any) {\r\n    this._onDetected(data.codeResult.code);\r\n  }\r\n}\r\n\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { Droppy } from './components/Droppy'\r\nimport logo from './barcode.png'\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport { BarcodeQuagga } from './components/BarcodeQuagga';\r\nimport Dropdown from 'react-bootstrap/esm/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/esm/ButtonGroup';\r\nimport 'react-bootstrap/esm';\r\nimport { getCapabilities, setTorch } from './components/camera';\r\nimport { ObjectInspector } from 'react-inspector';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { FormControlLabel } from '@material-ui/core';\r\n\r\ninterface IAppState {\r\n  width: number,\r\n  height: number,\r\n  code: string | null,\r\n  active: boolean,\r\n  capabilities: MediaTrackCapabilities | null,\r\n  showCameraInfo: boolean,\r\n  torchEnabled: boolean,\r\n}\r\n\r\nclass App extends React.Component<{}, IAppState> {\r\n  private readonly initialState: IAppState = {\r\n    width: 800,\r\n    height: 200,\r\n    code: null,\r\n    active: false,\r\n    capabilities: null,\r\n    showCameraInfo: false,\r\n    torchEnabled: false\r\n  };\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = this.initialState;\r\n    console.log(`app.tsx ctor: state=${JSON.stringify(this.state)}`)\r\n  }\r\n\r\n  private resolutions: number[] = [100, 200, 250, 300, 480, 800, 960, 1280, 1920];\r\n  private barcodeQuagga: BarcodeQuagga = new BarcodeQuagga();\r\n\r\n  componentDidMount() {\r\n    this.getCameraCapabilities();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" height=\"300px\" />\r\n            <br />\r\n            <br />\r\n            <div id='captureTarget' style={{ visibility: this.state.active ? 'visible' : 'collapse' }} />\r\n            <video hidden={true}></video>\r\n\r\n            <div>\r\n              {\r\n                this.state.active ?\r\n                  <Button className='ml-2' onClick={() => this.stop()}>Stop</Button>\r\n                  :\r\n                  <>\r\n                    <div>\r\n                      <Dropdown as={ButtonGroup}>\r\n                        <Droppy title={`Width: ${this.state.width}px`} values={this.resolutions.map(x => `${x}px`)} onSelect={this.handleWidthSelected} />\r\n                        <Droppy title={`Height: ${this.state.height}px`} values={this.resolutions.map(x => `${x}px`)} onSelect={this.handleHeightSelected} />\r\n                      </Dropdown>\r\n                      <Button variant='secondary' onClick={() => this.setState({ ...this.state, showCameraInfo: !this.state.showCameraInfo })}>Show/Hide Camera Info</Button>\r\n\r\n                      <FormControlLabel className='ml-2'\r\n                        control={<Checkbox style={{color: \"#00e676\"}} checked={this.state.torchEnabled} onChange={() => this.handleTorchChanged()} name=\"checkedB\" />}\r\n                        label=\"Torch\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className='mt-2 text-left' hidden={!this.state.showCameraInfo}>\r\n                      <ObjectInspector data={this.state.capabilities} expandLevel={10} showNonenumerable={false} sortObjectKeys={true} theme='chromeDark' />\r\n                    </div>\r\n\r\n                    <Button className='ml-2' onClick={() => this.start()}>Start (Quagga)</Button>\r\n                    <Button className='ml-2' disabled>Start (Quagga2.. TBA)</Button>\r\n                    <Button className='ml-2' disabled>Start (ZXing.. TBA)</Button>\r\n                  </>\r\n              }\r\n\r\n              {\r\n                this.state.code ?\r\n                  <>\r\n                    <br />\r\n                    <div>{`Code: ${this.state.code}`}</div>\r\n                  </>\r\n                  : null\r\n              }\r\n            </div>\r\n          </header>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  handleWidthSelected = (value: string | null): void => {\r\n    let val = value?.match(/\\d+/)?.[0];\r\n    if (val !== undefined) {\r\n      this.setState({ ...this.state, width: Number(val) });\r\n    }\r\n  }\r\n\r\n  handleHeightSelected = (value: string | null): void => {\r\n    let val = value?.match(/\\d+/)?.[0];\r\n    if (val !== undefined) {\r\n      this.setState({ ...this.state, height: Number(val) });\r\n    }\r\n  }\r\n\r\n  start() {\r\n    console.log(\"starting..\")\r\n    this.barcodeQuagga.start({ width: this.state.width, height: this.state.height, onDetected: this.handleDetected });\r\n\r\n    this.setState({ ...this.state, active: true })\r\n  }\r\n\r\n  stop() {\r\n    console.log(\"stopping..\")\r\n    this.barcodeQuagga.stop();\r\n    this.setState({ ...this.state, active: false })\r\n  }\r\n\r\n  handleDetected = (code: string) => {\r\n    console.log(`detected: code=${code}`)\r\n    this.setState({ ...this.state, code })\r\n    this.beep();\r\n  }\r\n\r\n  beep() {\r\n    var snd = new Audio(\"data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh05Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClOEgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\r\n    snd.volume = 1;\r\n    snd.play();\r\n  }\r\n\r\n  getCameraCapabilities() {\r\n    getCapabilities((capabilities: MediaTrackCapabilities) => {\r\n      this.setState({ ...this.state, capabilities })\r\n    });\r\n  }\r\n\r\n  handleTorchChanged() {\r\n    this.setState({ ...this.state, torchEnabled: !this.state.torchEnabled });\r\n\r\n    setTorch(!this.state.torchEnabled);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}